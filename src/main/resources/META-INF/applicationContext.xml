<?xml version="1.0" encoding="UTF-8"?>

<!-- This is the big "beans" tag declaration with all Spring namespaces used. As we use a lot of convenient notations, we use a lot of namespaces... -->
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

  <!-- Spring Security special HTTP filter authorization on the login command -->
  <http security="none" pattern="/rest/login" />

  <!-- Spring Security entry point which only send an HTTP 403 Forbidden in case of bad authentication. This has to be explicitely defined because the
    default handling is now to forward on an automatically generated login page which is not what we want for an Ajax login -->
  <beans:bean id="http403ForbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

  <!-- Spring Security main HTTP filter -->
  <http entry-point-ref="http403ForbiddenEntryPoint">
    <!-- The filter is mapped on every request in /rest/** and require a "ROLE_USER" profile -->
    <intercept-url pattern="/rest/**" access="hasRole('USER')" />
	<!-- The filter is mapped on every request in /data-rest/** and require a "ROLE_USER" profile -->
	<intercept-url pattern="/data-rest/**" access="hasRole('USER')" />
    <!-- Remember me mechanism trigger -->
    <remember-me />
  </http>

  <!-- Spring Security authentication manager, an alias is created to inject it into the LoginController -->
  <authentication-manager alias="authenticationManager">
    <!-- The application user service is used as the Spring Security authentication provider -->
    <authentication-provider user-service-ref="userServiceImpl" />
  </authentication-manager>

</beans:beans>